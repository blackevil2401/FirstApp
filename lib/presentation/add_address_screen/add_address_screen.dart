import 'models/add_address_model.dart';import 'package:blackevil2401_s_application3/core/app_export.dart';import 'package:blackevil2401_s_application3/core/utils/validation_functions.dart';import 'package:blackevil2401_s_application3/widgets/app_bar/appbar_leading_image.dart';import 'package:blackevil2401_s_application3/widgets/app_bar/appbar_title.dart';import 'package:blackevil2401_s_application3/widgets/app_bar/custom_app_bar.dart';import 'package:blackevil2401_s_application3/widgets/custom_elevated_button.dart';import 'package:blackevil2401_s_application3/widgets/custom_text_form_field.dart';import 'package:flutter/material.dart';import 'provider/add_address_provider.dart';class AddAddressScreen extends StatefulWidget {const AddAddressScreen({Key? key}) : super(key: key);

@override AddAddressScreenState createState() =>  AddAddressScreenState();

static Widget builder(BuildContext context) { return ChangeNotifierProvider(create: (context) => AddAddressProvider(), child: AddAddressScreen()); } 
 }

// ignore_for_file: must_be_immutable
class AddAddressScreenState extends State<AddAddressScreen> {GlobalKey<FormState> _formKey = GlobalKey<FormState>();

@override void initState() { super.initState(); } 
@override Widget build(BuildContext context) { return SafeArea(child: Scaffold(resizeToAvoidBottomInset: false, appBar: _buildAppBar(context), body: Form(key: _formKey, child: Container(width: double.maxFinite, padding: EdgeInsets.symmetric(vertical: 10.v), child: Column(children: [SizedBox(height: 29.v), Expanded(child: SingleChildScrollView(child: Padding(padding: EdgeInsets.only(left: 16.h, right: 16.h, bottom: 5.v), child: Column(children: [_buildCountry(context), SizedBox(height: 22.v), _buildFirstName(context), SizedBox(height: 22.v), _buildLastName(context), SizedBox(height: 23.v), _buildStreetAddress(context), SizedBox(height: 21.v), _buildStreetAddress2(context), SizedBox(height: 22.v), _buildCity(context), SizedBox(height: 23.v), _buildStateProvinceRegion(context), SizedBox(height: 24.v), _buildZipCode(context), SizedBox(height: 23.v), _buildPhoneNumber(context)]))))]))), bottomNavigationBar: _buildAddAddress(context))); } 
/// Section Widget
PreferredSizeWidget _buildAppBar(BuildContext context) { return CustomAppBar(leadingWidth: 40.h, leading: AppbarLeadingImage(imagePath: ImageConstant.imgArrowLeft, margin: EdgeInsets.only(left: 16.h, top: 15.v, bottom: 16.v), onTap: () {onTapArrowLeft(context);}), title: AppbarTitle(text: "lbl_add_address".tr, margin: EdgeInsets.only(left: 12.h))); } 
/// Section Widget
Widget _buildCountry(BuildContext context) { return Column(crossAxisAlignment: CrossAxisAlignment.start, children: [Text("msg_country_or_region".tr, style: TextStyle(color: theme.colorScheme.onPrimary.withOpacity(1), fontSize: 14.fSize, fontFamily: 'Poppins', fontWeight: FontWeight.w700)), SizedBox(height: 11.v), Selector<AddAddressProvider, TextEditingController?>(selector: (context, provider) => provider.countryController, builder: (context, countryController, child) {return CustomTextFormField(controller: countryController, hintText: "msg_enter_the_country".tr, borderDecoration: TextFormFieldStyleHelper.outlineBlueTL5, filled: false);})]); } 
/// Section Widget
Widget _buildFirstName(BuildContext context) { return Column(crossAxisAlignment: CrossAxisAlignment.start, children: [Text("lbl_first_name".tr, style: TextStyle(color: theme.colorScheme.onPrimary.withOpacity(1), fontSize: 14.fSize, fontFamily: 'Poppins', fontWeight: FontWeight.w700)), SizedBox(height: 13.v), Selector<AddAddressProvider, TextEditingController?>(selector: (context, provider) => provider.firstNameController, builder: (context, firstNameController, child) {return CustomTextFormField(controller: firstNameController, hintText: "msg_enter_the_first".tr, validator: (value) {if (!isText(value)) {return "err_msg_please_enter_valid_text".tr;} return null;}, borderDecoration: TextFormFieldStyleHelper.outlineBlueTL5, filled: false);})]); } 
/// Section Widget
Widget _buildLastName(BuildContext context) { return Column(crossAxisAlignment: CrossAxisAlignment.start, children: [Text("lbl_last_name".tr, style: TextStyle(color: theme.colorScheme.onPrimary.withOpacity(1), fontSize: 14.fSize, fontFamily: 'Poppins', fontWeight: FontWeight.w700)), SizedBox(height: 12.v), Selector<AddAddressProvider, TextEditingController?>(selector: (context, provider) => provider.lastNameController, builder: (context, lastNameController, child) {return CustomTextFormField(controller: lastNameController, hintText: "msg_enter_the_last_name".tr, validator: (value) {if (!isText(value)) {return "err_msg_please_enter_valid_text".tr;} return null;}, borderDecoration: TextFormFieldStyleHelper.outlineBlueTL5, filled: false);})]); } 
/// Section Widget
Widget _buildStreetAddress(BuildContext context) { return Column(crossAxisAlignment: CrossAxisAlignment.start, children: [Text("lbl_street_address".tr, style: TextStyle(color: theme.colorScheme.onPrimary.withOpacity(1), fontSize: 14.fSize, fontFamily: 'Poppins', fontWeight: FontWeight.w700)), SizedBox(height: 12.v), Selector<AddAddressProvider, TextEditingController?>(selector: (context, provider) => provider.streetaddressController, builder: (context, streetaddressController, child) {return CustomTextFormField(controller: streetaddressController, hintText: "msg_enter_the_street".tr, borderDecoration: TextFormFieldStyleHelper.outlineBlueTL5, filled: false);})]); } 
/// Section Widget
Widget _buildStreetAddress2(BuildContext context) { return Column(crossAxisAlignment: CrossAxisAlignment.start, children: [Text("msg_street_address_2".tr, style: TextStyle(color: theme.colorScheme.onPrimary.withOpacity(1), fontSize: 14.fSize, fontFamily: 'Poppins', fontWeight: FontWeight.w700)), SizedBox(height: 16.v), Selector<AddAddressProvider, TextEditingController?>(selector: (context, provider) => provider.streetaddressController1, builder: (context, streetaddressController1, child) {return CustomTextFormField(controller: streetaddressController1, hintText: "msg_enter_the_street2".tr, borderDecoration: TextFormFieldStyleHelper.outlineBlueTL5, filled: false);})]); } 
/// Section Widget
Widget _buildCity(BuildContext context) { return Column(crossAxisAlignment: CrossAxisAlignment.start, children: [Text("lbl_city".tr, style: TextStyle(color: theme.colorScheme.onPrimary.withOpacity(1), fontSize: 14.fSize, fontFamily: 'Poppins', fontWeight: FontWeight.w700)), SizedBox(height: 11.v), Selector<AddAddressProvider, TextEditingController?>(selector: (context, provider) => provider.cityController, builder: (context, cityController, child) {return CustomTextFormField(controller: cityController, hintText: "lbl_enter_the_city".tr, borderDecoration: TextFormFieldStyleHelper.outlineBlueTL5, filled: false);})]); } 
/// Section Widget
Widget _buildStateProvinceRegion(BuildContext context) { return Column(crossAxisAlignment: CrossAxisAlignment.start, children: [Text("msg_state_province_region".tr, style: TextStyle(color: theme.colorScheme.onPrimary.withOpacity(1), fontSize: 14.fSize, fontFamily: 'Poppins', fontWeight: FontWeight.w700)), SizedBox(height: 12.v), Selector<AddAddressProvider, TextEditingController?>(selector: (context, provider) => provider.oldPasswordController, builder: (context, oldPasswordController, child) {return CustomTextFormField(controller: oldPasswordController, hintText: "msg_enter_the_state".tr, borderDecoration: TextFormFieldStyleHelper.outlineBlueTL5, filled: false);})]); } 
/// Section Widget
Widget _buildZipCode(BuildContext context) { return Column(crossAxisAlignment: CrossAxisAlignment.start, children: [Text("lbl_zip_code".tr, style: TextStyle(color: theme.colorScheme.onPrimary.withOpacity(1), fontSize: 14.fSize, fontFamily: 'Poppins', fontWeight: FontWeight.w700)), SizedBox(height: 11.v), Selector<AddAddressProvider, TextEditingController?>(selector: (context, provider) => provider.zipcodeController, builder: (context, zipcodeController, child) {return CustomTextFormField(controller: zipcodeController, hintText: "msg_enter_the_zip_code".tr, textInputType: TextInputType.number, validator: (value) {if (!isNumeric(value)) {return "err_msg_please_enter_valid_number".tr;} return null;}, borderDecoration: TextFormFieldStyleHelper.outlineBlueTL5, filled: false);})]); } 
/// Section Widget
Widget _buildPhoneNumber(BuildContext context) { return Column(crossAxisAlignment: CrossAxisAlignment.start, children: [Text("lbl_phone_number".tr, style: TextStyle(color: theme.colorScheme.onPrimary.withOpacity(1), fontSize: 14.fSize, fontFamily: 'Poppins', fontWeight: FontWeight.w700)), SizedBox(height: 12.v), Selector<AddAddressProvider, TextEditingController?>(selector: (context, provider) => provider.phoneNumberController, builder: (context, phoneNumberController, child) {return CustomTextFormField(controller: phoneNumberController, hintText: "msg_enter_the_phone".tr, textInputAction: TextInputAction.done, textInputType: TextInputType.phone, validator: (value) {if (!isValidPhone(value)) {return "err_msg_please_enter_valid_phone_number".tr;} return null;}, contentPadding: EdgeInsets.symmetric(horizontal: 12.h, vertical: 15.v), borderDecoration: TextFormFieldStyleHelper.outlineBlueTL5, filled: false);})]); } 
/// Section Widget
Widget _buildAddAddress(BuildContext context) { return CustomElevatedButton(text: "lbl_add_address".tr, margin: EdgeInsets.only(left: 16.h, right: 16.h, bottom: 50.v)); } 

/// Navigates to the previous screen.
onTapArrowLeft(BuildContext context) { NavigatorService.goBack(); } 
 }
