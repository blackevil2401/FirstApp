import '../cart_page/widgets/cart_item_widget.dart';import 'models/cart_item_model.dart';import 'models/cart_model.dart';import 'package:blackevil2401_s_application3/core/app_export.dart';import 'package:blackevil2401_s_application3/widgets/app_bar/appbar_title.dart';import 'package:blackevil2401_s_application3/widgets/app_bar/appbar_trailing_image.dart';import 'package:blackevil2401_s_application3/widgets/app_bar/custom_app_bar.dart';import 'package:blackevil2401_s_application3/widgets/custom_elevated_button.dart';import 'package:blackevil2401_s_application3/widgets/custom_text_form_field.dart';import 'package:flutter/material.dart';import 'provider/cart_provider.dart';class CartPage extends StatefulWidget {const CartPage({Key? key}) : super(key: key);

@override CartPageState createState() =>  CartPageState();

static Widget builder(BuildContext context) { return ChangeNotifierProvider(create: (context) => CartProvider(), child: CartPage()); } 
 }
class CartPageState extends State<CartPage> {@override void initState() { super.initState(); } 
@override Widget build(BuildContext context) { return SafeArea(child: Scaffold(resizeToAvoidBottomInset: false, appBar: _buildAppBar(context), body: Container(width: double.maxFinite, padding: EdgeInsets.symmetric(horizontal: 15.h, vertical: 7.v), child: Column(children: [_buildCart(context), SizedBox(height: 52.v), _buildCouponCode(context), SizedBox(height: 16.v), CustomElevatedButton(text: "lbl_check_out".tr, onPressed: () {onTapCheckOut(context);}), SizedBox(height: 8.v)])))); } 
/// Section Widget
PreferredSizeWidget _buildAppBar(BuildContext context) { return CustomAppBar(title: AppbarTitle(text: "lbl_your_cart".tr, margin: EdgeInsets.only(left: 16.h)), actions: [AppbarTrailingImage(imagePath: ImageConstant.imgNotificationIcon, margin: EdgeInsets.fromLTRB(13.h, 15.v, 13.h, 16.v), onTap: () {onTapNotificationIcon(context);})]); } 
/// Section Widget
Widget _buildCart(BuildContext context) { return Padding(padding: EdgeInsets.only(right: 1.h), child: Consumer<CartProvider>(builder: (context, provider, child) {return ListView.separated(physics: NeverScrollableScrollPhysics(), shrinkWrap: true, separatorBuilder: (context, index) {return SizedBox(height: 16.v);}, itemCount: provider.cartModelObj.cartItemList.length, itemBuilder: (context, index) {CartItemModel model = provider.cartModelObj.cartItemList[index]; return CartItemWidget(model);});})); } 
/// Section Widget
Widget _buildTotalPriceDetails(BuildContext context) { return Container(padding: EdgeInsets.all(15.h), decoration: AppDecoration.outlineBlue50.copyWith(borderRadius: BorderRadiusStyle.roundedBorder5), child: Column(mainAxisSize: MainAxisSize.min, mainAxisAlignment: MainAxisAlignment.center, children: [_buildShoppingPrice(context, shippingText: "lbl_items_3".tr, priceText: "lbl_598_86".tr), SizedBox(height: 16.v), _buildShoppingPrice(context, shippingText: "lbl_shipping".tr, priceText: "lbl_40_00".tr), SizedBox(height: 14.v), _buildShoppingPrice(context, shippingText: "lbl_import_charges".tr, priceText: "lbl_128_00".tr), SizedBox(height: 12.v), Divider(), SizedBox(height: 10.v), _buildShoppingPrice(context, shippingText: "lbl_total_price".tr, priceText: "lbl_766_86".tr)])); } 
/// Section Widget
Widget _buildCouponCode(BuildContext context) { return Padding(padding: EdgeInsets.only(right: 1.h), child: Column(children: [Row(mainAxisAlignment: MainAxisAlignment.center, children: [Expanded(child: Selector<CartProvider, TextEditingController?>(selector: (context, provider) => provider.cuponCodeController, builder: (context, cuponCodeController, child) {return CustomTextFormField(controller: cuponCodeController, hintText: "msg_enter_cupon_code".tr, textInputAction: TextInputAction.done, contentPadding: EdgeInsets.symmetric(horizontal: 16.h, vertical: 19.v));})), CustomElevatedButton(width: 87.h, text: "lbl_apply".tr, buttonStyle: CustomButtonStyles.fillPrimary)]), SizedBox(height: 16.v), _buildTotalPriceDetails(context)])); } 
/// Common widget
Widget _buildShoppingPrice(BuildContext context, {required String shippingText, required String priceText, }) { return Row(mainAxisAlignment: MainAxisAlignment.spaceBetween, children: [Padding(padding: EdgeInsets.only(top: 1.v), child: Text(shippingText, style: TextStyle(color: appTheme.blueGray300, fontSize: 12.fSize, fontFamily: 'Poppins', fontWeight: FontWeight.w400))), Text(priceText, style: TextStyle(color: theme.colorScheme.onPrimary.withOpacity(1), fontSize: 12.fSize, fontFamily: 'Poppins', fontWeight: FontWeight.w400))]); } 
/// Navigates to the notificationScreen when the action is triggered.
onTapNotificationIcon(BuildContext context) { NavigatorService.pushNamed(AppRoutes.notificationScreen, ); } 
/// Navigates to the shipToScreen when the action is triggered.
onTapCheckOut(BuildContext context) { NavigatorService.pushNamed(AppRoutes.shipToScreen, ); } 
 }
